//change require to import from
//package imports
const path = require('path');
const express = require('express');
const session = require('express-session');
const exphbs = require('express-handlebars');
//const bodyParser = require('body-parser');

//file imports
const routes = require('./controllers');
const helpers = require('./utils/helpers');

const sequelize = require('./config/connection');
const SequelizeStore = require('connect-session-sequelize')(session.Store);

const app = express();
const PORT = process.env.PORT || 3001;

// Set up Handlebars.js engine with custom helpers
const hbs = exphbs.create({ helpers });


// sessions is a local storage method to store tokens or access credentials for the next login or this current logged in session
// sessions is a method to protect api routes using a token
// the token is generated by the server when a user logs in
// the server sends the token to the user to hold (during this session - deleted when browser closed)
// user sends token to server "api" to authorizee
// authenticate - go to office get badge
// authorize - scan badge at the door
const sess = {
  secret: 'Super secret secret',
  cookie: {
    maxAge: 300000,
    // heroku will likely require a SSL protected route (http => https)
    httpOnly: false,
    secure: false,
    sameSite: 'strict',
  },
  resave: false,
  saveUninitialized: true,
  store: new SequelizeStore({
    db: sequelize
  })
};
try{

app.use(session(sess));

// Inform Express.js on which template engine to use
app.engine('handlebars', hbs.engine);
app.set('view engine', 'handlebars');

//Express no longer includes package Bodyparser so we have
//to import it manually (require) through Terminal
//in Terminal: $ npm install body-parser
// included in express.urlencoded
//app.use(bodyParser({extended:false}));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(express.static(path.join(__dirname, 'public')));

// tell the server to use your predefined routes
app.use(routes);

// catch-all route
// any route that doesn't match any of the defined routes
app.all('*', (req, res) => {
  console.log('No route found at:', req.path)
  res.render(`errorpage`)
})

//added PORT below so other users will know if the port has changed
sequelize.sync({ force: false }).then(() => {
  app.listen(PORT, () => console.log('Now listening',PORT));
});
}catch(err){
  console.log('SERVER ERROR >>>', err)
}